name: Build images

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda: [11.7.1, 11.8.0]
        torch: [1.13.1, 2.0.0]
    steps:
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64
      -
        name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false  
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        run: |
          IFS='.' read -r -a torch <<< "${{ matrix.torch }}"
          IFS='.' read -r -a cuda <<< "${{ matrix.cuda }}"
          #
          CUDA_TAG=${cuda[0]}.$[cuda[1]]
          IMAGE_TAG=${torch[0]}.${torch[1]}-cu${CUDA_TAG}
          #
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "cuda_tag=${CUDA_TAG}" >> $GITHUB_ENV 
      - 
        name: Build image
        uses: docker/build-push-action@v3
        with:
          push: true
          file: Dockerfile
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/torch:${{ env.image_tag }}
          build-args: |
            BASE=${{ secrets.DOCKERHUB_USERNAME }}/mamba
            TORCH=${{ matrix.torch }}
            CUDA_TAG=${{ env.cuda_tag }}
            CUDA_VERSION=${{ matrix.cuda }}